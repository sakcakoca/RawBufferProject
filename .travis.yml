language: cpp

install:
  - python3 -m pip install --upgrade pip setuptools
  - pip install --upgrade cmake
  - cmake --version
  - clang --version

jobs:
  include:
    #Coverity Scan Config#
    - os: linux
      dist: bionic
      compiler: gcc
      before_install:
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      env:
        - GCC_VER="10"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"
        global:
          - secure: "oaLj5mf2/AW3e7810dhwS7PwdFfAyVxqaEyOLObjyqrbItDMNct0tmul08wchQ94d0q6k4/JZu1iXb6WuedO2eY1CcN5K5dU5tV3+aKmLWVwIfr7ildPsvcPlsjeF4P7bl/ppSogKcEYh+JsOWggxafZroEg3naKEakQ/zCFpZ5Uk6FQod/OILTL93UdCR7aiO8WRdhzOJczuRfE1yMwmYV0SHJVpGu7okFjk0pQ3Ewdraq2VR/Iht8meZyB9wZcJY9XA5hF5ztI4z8P5nnFsOoOVlvfXxZGpTMS99lOcvG6jL3JxnBnMLzIXW3spelZ0q3Y2cX6CLIoZjEYhevHcZGOl7oK4G1+JMIfJ9GME19MKmgssIYilL0IZZ8TszbJeUwHGE2NZRfcopzqH0w8hdiivtIZmvtaPPkSucCznBZiQe9aPNZA59G715NZ9WMCbvLCYAjf+WSO1/jHz19fXEcNZur55i//F0//wcFZJ0CLa4mNHwG4xr1ZYfMHlOSuPt71X0uHwTHacc+A6i+MbtccOcPHusRIGx6E5WjP6+UKLho87HgCALfWOKxBOqKjZmwmXr9I7Q0Edkl5rRtCnlEcPYfPzsr1yxvmZoT7ddPdmUnUfQc4lWCAaTr/W1BVGs35v/aA55qM4iydSFVDHthn/2xT+Icjr1doMhQ65TA="
        
      addons:
        coverity_scan:
          project:
            name: "sakcakoca/RawBufferProject"
            description: "Raw Buffer Project"
          notification_email: salim.akcakoca@msn.com
          build_command_prepend: "mkdir build ; cd build"
          build_command: "cmake --build . -- -j2"
          branch_pattern: master
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-10
            - g++-10
            - python3-pip

    #Ubuntu Bionic (18.04) with gcc10 - Labeled as Ubuntu_18.04#
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - BADGE=Ubuntu_18.04
        - GCC_VER="10"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-10
            - g++-10
            - python3-pip
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}

    #Ubuntu Focal (20.04) with clang#
    - os: linux
      dist: focal
      compiler: clang
      env:
        - CLANG_VER="12"
        - MATRIX_EVAL="CC=clang-${CLANG_VER} && CXX=clang++-${CLANG_VER} && CXXFLAGS=-stdlib=libc++"
      install:
        - sudo rm -rf /usr/local/clang-7.0.0
        - sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - python get-pip.py
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: 
            - g++-10
            
    #OsX with gcc and xcode12.4 - Labeled as OSX#
    - os: osx
      compiler: gcc
      osx_image: xcode12.4
      env:
        - BADGE=OSX
        - GCC_VER="10"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"


     #OsX with clang#
     #Currently AppleClang compiler doesn't support c++ 20 features compeletely
#    - os: osx
#      compiler: clang
#      osx_image: xcode12.4
#      env:
#        - MATRIX_EVAL="CC=clang && CXX=clang++ && CXXFLAGS=-stdlib=libc++"

before_script:
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE ../
  - cmake --build . -- -j2
  - ctest -j2


